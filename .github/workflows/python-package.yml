# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing

on:
  push:
    branches: [ "main" ]
    paths: 
      - src/**
      - tests/**
      - poetry.lock
      - pyproject.toml
      - .github/workflows/python-package.yml
  pull_request:
    branches: [ "main" ]
    paths: 
      - src/**
      - tests/**
      - poetry.lock
      - pyproject.toml
      - .github/workflows/python-package.yml
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: |
        curl -O -sSL https://install.python-poetry.org/install-poetry.py
        python install-poetry.py -y 
        echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV
        rm install-poetry.py
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
        allow-prereleases: true
    - name: Install dependencies
      run: |
        poetry env use ${{ matrix.python-version }}
        poetry install
    - name: Print python versions
      run: |
        python -V
        poetry run python -V
    - name: Test with pytest
      env:
        GS_TEST_CONNECT_PASSWORD: ${{ secrets.GS_TEST_CONNECT_PASSWORD }}
        GS_TEST_CONNECT_EMAIL: ${{ secrets.GS_TEST_CONNECT_EMAIL }}
        GS_TEST_CONNECT_CID: ${{ secrets.GS_TEST_CONNECT_CID }}
        GS_TEST_CONNECT_AID: ${{ secrets.GS_TEST_CONNECT_AID }}
        GS_TEST_CONNECT: ${{ secrets.GS_TEST_CONNECT }}
      run: |
        poetry run pytest tests --cov --cov-report=json -rsE
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
